/*
 * File: app/view/LoginFormViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.8.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.2.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.2.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EmployeeApp.view.LoginFormViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.loginform',

    onLoginTap: function(button) {
        var me = this,
            form = me.getView(),
            values = form.getValues();

        if (form.validate()) {
            Ext.Viewport.setMasked({
                xtype: 'loadmask',
                message: 'Logging In...'
            });

            Ext.Ajax.request({
                url: '/users/login',
                method: 'POST',
                jsonData: values,
                scope: me,
                callback: me.onLoginCallback
            });
        } else {
            Ext.Msg.alert('Invalid Details', 'Please enter your login name and password.');
        }
    },

    onLoginCallback: function(options, success, response) {
        var me = this,
            form = me.getView(),
            mainView = form.up('mainpanel'),
            mainController = mainView.getController(),
            logoutButton = mainView.lookupReference('logout'),
            responseData = Ext.decode(response.responseText),
            rememberMe = me.lookup('rememberMe').isChecked(),
            storage = Ext.getApplication().storage,
            title, error;

        Ext.Viewport.setMasked(false);

        if (success) {
            Ext.Ajax.setDefaultHeaders({'X-Embarcadero-Session-Token': responseData.sessionToken});

            if (rememberMe) {
                storage.setItem('sessionToken', responseData.sessionToken);
            }

            form.reset(true);

            mainController.loginSuccess();
        } else {
            title = responseData.error || 'Login Error';
            error = responseData.description || 'Unhandled error';

            Ext.Msg.alert(title, error);
        }
    }

});