/*
 * File: app/view/EmployeeGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.8.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.2.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.2.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EmployeeApp.view.EmployeeGrid', {
    extend: 'Ext.grid.Grid',
    alias: 'widget.employeegrid',

    requires: [
        'EmployeeApp.view.EmployeeGridViewModel',
        'EmployeeApp.view.EmployeeGridViewController',
        'EmployeeApp.view.EmployeeForm',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.Toolbar',
        'Ext.Button',
        'Ext.Spacer',
        'Ext.form.Panel'
    ],

    controller: 'employeegrid',
    viewModel: {
        type: 'employeegrid'
    },
    height: '100%',
    name: 'EmployeeGrid',
    width: '100%',

    bind: {
        store: '{employee}'
    },
    columns: [
        {
            xtype: 'numbercolumn',
            dataIndex: 'id',
            text: 'Emp No',
            format: '00'
        },
        {
            xtype: 'gridcolumn',
            flex: 1,
            dataIndex: 'firstName',
            text: 'First Name'
        },
        {
            xtype: 'gridcolumn',
            flex: 1,
            dataIndex: 'lastName',
            text: 'Last Name'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, record, dataIndex, cell, column) {
                return value !== '' ? 'x' + value : '';
            },
            dataIndex: 'phoneExt',
            text: 'Phone Ext'
        },
        {
            xtype: 'datecolumn',
            dataIndex: 'hireDate',
            text: 'Hire Date'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'jobCode',
            text: 'Job Code'
        },
        {
            xtype: 'numbercolumn',
            dataIndex: 'jobGrade',
            text: 'Job Grade',
            format: '00'
        },
        {
            xtype: 'gridcolumn',
            width: 150,
            dataIndex: 'jobCountry',
            text: 'Job Country'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, record, dataIndex, cell, column) {
                return EmployeeApp.util.Format.intlCurrency(record.data.jobCountry, value);
            },
            width: 150,
            dataIndex: 'salary',
            text: 'Salary'
        }
    ],
    listeners: {
        select: 'onGridSelect',
        activate: {
            fn: 'onGridActivate',
            single: true
        }
    },
    items: [
        {
            xtype: 'toolbar',
            docked: 'top',
            items: [
                {
                    xtype: 'button',
                    iconCls: 'x-fa fa-plus',
                    text: 'New Employee',
                    listeners: {
                        tap: 'onNewEmployeeTap'
                    }
                },
                {
                    xtype: 'spacer'
                },
                {
                    xtype: 'button',
                    tooltip: 'Refresh data',
                    iconCls: 'x-fa fa-sync',
                    listeners: {
                        tap: 'onRefreshTap'
                    }
                }
            ]
        },
        {
            xtype: 'employeeform',
            hidden: true,
            docked: 'right',
            maxWidth: 600,
            minWidth: 450
        }
    ]

});