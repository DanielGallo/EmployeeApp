/*
 * File: app/model/Employee.js
 *
 * This file was generated by Sencha Architect version 4.2.8.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.2.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.2.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EmployeeApp.model.Employee', {
    extend: 'Ext.data.Model',
    alias: 'model.employee',

    requires: [
        'Ext.data.field.Integer',
        'Ext.data.field.String',
        'Ext.data.field.Date',
        'Ext.data.proxy.Rest',
        'Ext.data.writer.Json'
    ],


    fields: [
        {
            type: 'int',
            mapping: 'EMP_NO',
            name: 'id',
            persist: false
        },
        {
            type: 'string',
            mapping: 'FIRST_NAME',
            name: 'firstName'
        },
        {
            type: 'string',
            mapping: 'LAST_NAME',
            name: 'lastName'
        },
        {
            type: 'string',
            mapping: 'PHONE_EXT',
            name: 'phoneExt'
        },
        {
            type: 'string',
            mapping: 'JOB_CODE',
            name: 'jobCode'
        },
        {
            type: 'int',
            defaultValue: null,
            mapping: 'JOB_GRADE',
            name: 'jobGrade'
        },
        {
            type: 'string',
            mapping: 'JOB_COUNTRY',
            name: 'jobCountry'
        },
        {
            type: 'int',
            mapping: 'SALARY',
            name: 'salary'
        },
        {
            type: 'string',
            mapping: 'DEPT_NO',
            name: 'deptId'
        },
        {
            type: 'string',
            calculate: function(data) {
                var me = this,
                    store = Ext.getStore('Department'),
                    department = '',
                    record;

                if (data.deptId !== '') {
                    record = store.getById(data.deptId);

                    department = record.get('department');
                }

                return department;
            },
            depends: 'deptId',
            name: 'department'
        },
        {
            type: 'date',
            mapping: 'HIRE_DATE',
            name: 'hireDate',
            dateReadFormat: 'YmdTHis',
            dateWriteFormat: 'd/m/yy'
        }
    ],
    proxy: {
        type: 'rest',
        noCache: false,
        url: '/data/employee/',
        writer: {
            type: 'json',
            nameProperty: 'mapping'
        }
    }

});